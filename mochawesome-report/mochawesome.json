{
  "stats": {
    "suites": 5,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2023-04-26T09:35:30.782Z",
    "end": "2023-04-26T09:36:38.857Z",
    "duration": 68075,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "72f3199c-617a-4363-93ba-52dde7a49330",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "990ad22c-73b6-457b-9f1b-222a0534545d",
          "title": "Rozetka",
          "fullFile": "E:\\AutomationTestTask\\testfile.js",
          "file": "\\testfile.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"before each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 741,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "b67c528b-30b5-4f0e-83cf-33be889692f8",
              "parentUUID": "990ad22c-73b6-457b-9f1b-222a0534545d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"after each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 89,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "1f51f9a8-8a76-41d0-8b61-47244712d2cd",
              "parentUUID": "990ad22c-73b6-457b-9f1b-222a0534545d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should open Rozetka",
              "fullTitle": "Rozetka should open Rozetka",
              "timedOut": false,
              "duration": 20097,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const window = await driver.manage().window();\nawait window.maximize();\nawait driver.get(process.env.URL);\nconst title = await driver.getTitle();\nassert.strictEqual(title, 'Інтернет-магазин ROZETKA™: офіційний сайт найпопулярнішого онлайн-гіпермаркету в Україні');\n// Open category and subcategory.\nawait driver.wait(\n  until.elementsLocated(By.linkText(\"Ноутбуки та комп’ютери\"))\n)\nawait driver.findElement(By.linkText(\"Ноутбуки та комп’ютери\")).click()\nawait driver.wait(until.elementsLocated(By.linkText(\"Ноутбуки\")))\nawait driver.findElement(By.linkText(\"Ноутбуки\")).click()\n// Navigate to the filters section. Apply 2 filters.\nawait driver.wait(until.elementsLocated(By.css('[data-id=\"ASUS\"]')))\nawait driver.sleep(1000)\nawait driver.findElement(By.css('[data-id=\"ASUS\"]')).click()\nawait driver.wait(until.elementsLocated(By.css('[data-id=\"Acer\"]')))\nawait driver.sleep(1000)\nawait driver.findElement(By.css('[data-id=\"Acer\"]')).click()\n// Verify that all the items on the page are sorted correctly by the from and to price filters you entered.\nawait driver.sleep(2000)\nawait driver.findElement(By.css(\".select-css\")).click()\nawait driver.wait(until.elementsLocated(By.css('[value=\"1: cheap\"]')))\nawait driver.sleep(1000)\nawait driver.findElement(By.css('[value=\"1: cheap\"]')).click()\nawait driver.sleep(3000)\nconst prices = await driver.findElements(By.css(\".goods-tile__price-value\"))\nconst priceValues = await Promise.all(\n  prices.map(async (price) => {\n    return String(await price.getText()).replace(/\\D+/g, \"\")\n  })\n)\nconst sortedPriceValues = [...priceValues].sort((a, b) => a - b)\nconsole.log(priceValues)\nconsole.log(sortedPriceValues)\nassert.deepEqual(priceValues, sortedPriceValues)\nawait driver.sleep(5000);",
              "err": {},
              "uuid": "35706c45-a5f9-47c9-9bd2-4d4ad06e3f8c",
              "parentUUID": "990ad22c-73b6-457b-9f1b-222a0534545d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35706c45-a5f9-47c9-9bd2-4d4ad06e3f8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20097,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4d269340-7664-4f4e-98b0-1f59a4d57886",
          "title": "Rozetka",
          "fullFile": "E:\\AutomationTestTask\\testfile.js",
          "file": "\\testfile.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"before each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 687,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build()",
              "err": {},
              "uuid": "915ae008-292e-4f0f-b80a-b958eecea93c",
              "parentUUID": "4d269340-7664-4f4e-98b0-1f59a4d57886",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"after each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 60,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "07c176c7-0d09-4841-8cba-593a00878f4d",
              "parentUUID": "4d269340-7664-4f4e-98b0-1f59a4d57886",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should open Rozetka",
              "fullTitle": "Rozetka should open Rozetka",
              "timedOut": false,
              "duration": 24112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const window = await driver.manage().window()\nawait window.maximize()\nawait driver.get(process.env.URL)\nconst title = await driver.getTitle()\nassert.strictEqual(\n    title,\n    \"Інтернет-магазин ROZETKA™: офіційний сайт найпопулярнішого онлайн-гіпермаркету в Україні\"\n)\n// Open category and subcategory.\nawait driver.wait(\n    until.elementsLocated(By.linkText(\"Ноутбуки та комп’ютери\"))\n)\nawait driver.findElement(By.linkText(\"Ноутбуки та комп’ютери\")).click()\nawait driver.wait(until.elementsLocated(By.linkText(\"Ноутбуки\")))\nawait driver.findElement(By.linkText(\"Ноутбуки\")).click()\n// Add any item to the basket.\nawait driver.wait(until.elementsLocated(By.css(\".goods-tile__buy-button\")))\nawait driver.sleep(1000)\nawait driver.findElement(By.css(\".goods-tile__buy-button\")).click()\n// Select another category and add an item from that category.\nawait driver.get(process.env.URL)\nawait driver.wait(until.elementsLocated(By.linkText(\"Зоотовари\")))\nawait driver.findElement(By.linkText(\"Зоотовари\")).click()\nawait driver.wait(until.elementsLocated(By.linkText(\"Корм\")))\nawait driver.findElement(By.linkText(\"Корм\")).click()\nawait driver.wait(until.elementsLocated(By.css(\".goods-tile__buy-button\")))\nawait driver.sleep(1000)\nawait driver.findElement(By.css(\".goods-tile__buy-button\")).click()\n// Verify information of items inside the basket that the price is calculated correctly and that the delete item button is clickable.\nawait driver.wait(\n    until.elementsLocated(By.css(\".badge--green[_ngcontent-rz-client-c19]\"))\n)\nawait driver.sleep(1000)\nconst count = await driver\n    .findElement(By.css(\".badge--green[_ngcontent-rz-client-c19]\"))\n    .getText()\nassert.strictEqual(count, \"2\")\nawait driver.wait(\n    until.elementsLocated(By.css(\".header__button[_ngcontent-rz-client-c21]\"))\n)\nawait driver.sleep(1000)\nawait driver\n    .findElement(By.css(\".header__button[_ngcontent-rz-client-c21]\"))\n    .click()\nawait driver.wait(\n    until.elementsLocated(\n        By.css(\".cart-product__price[_ngcontent-rz-client-c128]\")\n    )\n)\nawait driver.sleep(1000)\nconst prices = await driver.findElements(\n    By.css(\".cart-product__price[_ngcontent-rz-client-c128]\")\n)\nconst priceValues = await Promise.all(\n    prices.map(async (price) => {\n        return parseInt(String(await price.getText()).replace(/\\D+/g, \"\"))\n    })\n)\nconst totalPrice = await driver.findElement(\n    By.css(\"    .cart-receipt__sum-price        \")\n)\nconst totalPriceValue = parseInt(\n    String(await totalPrice.getText()).replace(/\\D+/g, \"\")\n)\nconst calculatedTotalPrice = priceValues.reduce(\n    (accumulator, currentValue) => accumulator + currentValue\n)\nconsole.log(\"priceValues - \", priceValues)\nconsole.log(\"totalPriceValue - \", totalPriceValue)\nconsole.log(\"calculatedTotalPrice - \", calculatedTotalPrice)\nassert.deepEqual(totalPriceValue, calculatedTotalPrice)\nawait driver.findElement(By.id(\"cartProductActions0\")).click()\nawait driver.sleep(1000)\nawait driver\n    .findElement(By.css(\".popup-menu__item:nth-child(1) .button\"))\n    .click()\nawait driver.wait(\n    until.elementsLocated(By.css(\".badge--green[_ngcontent-rz-client-c19]\"))\n)\nawait driver.sleep(1000)\nconst countAfterDelete = await driver\n    .findElement(By.css(\".badge--green[_ngcontent-rz-client-c19]\"))\n    .getText()\nassert.strictEqual(countAfterDelete, \"1\")\nawait driver.sleep(5000)",
              "err": {},
              "uuid": "a681c361-579f-45b8-881b-1740249d02aa",
              "parentUUID": "4d269340-7664-4f4e-98b0-1f59a4d57886",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a681c361-579f-45b8-881b-1740249d02aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8d2260ca-047f-42cb-823f-59674d8b5f9d",
          "title": "Rozetka",
          "fullFile": "E:\\AutomationTestTask\\testfile.js",
          "file": "\\testfile.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"before each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 657,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build()",
              "err": {},
              "uuid": "8b33feb7-61b7-49e5-a54f-e130ee0e899b",
              "parentUUID": "8d2260ca-047f-42cb-823f-59674d8b5f9d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"after each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 46,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "67cc752b-f2fa-4067-9739-83e568ddf08f",
              "parentUUID": "8d2260ca-047f-42cb-823f-59674d8b5f9d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should open Rozetka",
              "fullTitle": "Rozetka should open Rozetka",
              "timedOut": false,
              "duration": 12577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const window = await driver.manage().window()\nawait window.maximize()\nawait driver.get(process.env.URL)\nconst title = await driver.getTitle()\nassert.strictEqual(\n  title,\n  \"Інтернет-магазин ROZETKA™: офіційний сайт найпопулярнішого онлайн-гіпермаркету в Україні\"\n)\n// Search random item by name\nawait driver.findElement(By.name(\"search\")).sendKeys(\"ноутбук\")\nawait driver.findElement(By.css(\".button_color_green\")).click()\n// Verify that all items are correctly displayed according to your searching request (only on the first page).\nawait driver.wait(until.elementsLocated(By.css(\".goods-tile__title\")))\nawait driver.sleep(1000)\nconst itemNames = await driver.findElements(By.css(\".goods-tile__title\"))\nconst itemNamesText = await Promise.all(\n  itemNames.map(async (name) => {\n    return await name.getText()\n  })\n)\nconsole.log(\"itemNamesText\", itemNamesText)\nitemNamesText.forEach((name) => {\n  assert.ok(name.toLowerCase().includes(\"ноутбук\"))\n})\nconsole.log(`Found ${itemNamesText.length} items`);\nawait driver.sleep(5000)",
              "err": {},
              "uuid": "8c20986c-89a8-46ec-9328-c48e6f13ce52",
              "parentUUID": "8d2260ca-047f-42cb-823f-59674d8b5f9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c20986c-89a8-46ec-9328-c48e6f13ce52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12577,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "27719afb-64cf-4593-b5a8-49219b86cbd9",
          "title": "Rozetka",
          "fullFile": "E:\\AutomationTestTask\\testfile.js",
          "file": "\\testfile.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"before each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 724,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build()",
              "err": {},
              "uuid": "b5df5f19-cd58-47e2-85dd-27718c385e41",
              "parentUUID": "27719afb-64cf-4593-b5a8-49219b86cbd9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Rozetka\"",
              "fullTitle": "Rozetka \"after each\" hook in \"Rozetka\"",
              "timedOut": false,
              "duration": 59,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit()",
              "err": {},
              "uuid": "f797738f-5e36-4df9-99ef-b4bc4b93929e",
              "parentUUID": "27719afb-64cf-4593-b5a8-49219b86cbd9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "1",
              "fullTitle": "Rozetka 1",
              "timedOut": false,
              "duration": 8210,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await driver.get(process.env.URL)\nawait driver.wait(\n  until.elementsLocated(By.linkText(\"Ноутбуки та комп’ютери\"))\n)\nawait driver.findElement(By.linkText(\"Ноутбуки та комп’ютери\")).click()\nawait driver.wait(until.elementsLocated(By.linkText(\"Ноутбуки\")))\nawait driver.findElement(By.linkText(\"Ноутбуки\")).click()\n// Check the correctness adding product to the basket.\nawait driver.wait(until.elementsLocated(By.css(\".goods-tile__buy-button\")))\nawait driver.sleep(1000)\nawait driver.findElement(By.css(\".goods-tile__buy-button\")).click()\nawait driver.wait(\n  until.elementsLocated(By.css(\".header__button[_ngcontent-rz-client-c21]\"))\n)\nawait driver.sleep(1000)\nawait driver\n  .findElement(By.css(\".header__button[_ngcontent-rz-client-c21]\"))\n  .click()\nawait driver.sleep(1000)\nawait driver\n  .findElement(By.css(\".cart-list__item:nth-child(1) .button:nth-child(3)\"))\n  .click()\nawait driver.wait(\n  until.elementsLocated(By.css(\".badge--green[_ngcontent-rz-client-c19]\"))\n)\nawait driver.sleep(1000)\nconst count = await driver\n  .findElement(By.css(\".badge--green[_ngcontent-rz-client-c19]\"))\n  .getText()\nassert.strictEqual(count, \"1\")\nawait driver.sleep(5000)",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n\n'2' !== '1'\n",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n\n'2' !== '1'\n\n    at Context.<anonymous> (CorrectProductBasket.js:57:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- 2\n+ 1\n"
              },
              "uuid": "8bb7a0ff-48b5-4ee5-a5fa-499f2c0cc9a5",
              "parentUUID": "27719afb-64cf-4593-b5a8-49219b86cbd9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8bb7a0ff-48b5-4ee5-a5fa-499f2c0cc9a5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ba253512-fa70-44d4-a304-3026054a6d75",
          "title": "My test suite",
          "fullFile": "E:\\AutomationTestTask\\testfile.js",
          "file": "\\testfile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should pass this test",
              "fullTitle": "My test suite should pass this test",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.strictEqual(1 + 1, 2);",
              "err": {},
              "uuid": "03759160-6af1-457d-909d-5b0b8d19b4cc",
              "parentUUID": "ba253512-fa70-44d4-a304-3026054a6d75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03759160-6af1-457d-909d-5b0b8d19b4cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}